h1. Geo Vectors

Vector classes and operations for Geo calculations.

h2. Install

@require 'geo_vectors_@

h3. Gemfile

Insert into Gemfile of the app:

@gem 'geo_vectors'@

Then run bundler from command line to bundle the gem with the app:

@$ bundle@

h2. Intro

A GeoVector consist of either:

1) A bearing (direction in degrees) and a distance
2) A distance due east/west and a distance due north/south

A GeoVector can be applied to a GeoPoint (see geo_calc) or to another GeoVector.
When multiple vectors are added together, the sum becomes a GeoVectors object.
If a GeoVectors object is applied, the vectors are simply applied in turn.

h2. Quick start (Usage guide)

The following gives a quick overview for how to use the GeoVector API.

_Note: This is suggested functionality._

I plan to use my recently published _geo_calc_ gem as the base for the functionality described here.
I need a major cleanup up of the current code...

h3. Addition

Vectors can be added to form a new Vector, using the simple formula vec = v1 + v2 = (v1.x + v2.y, v1.x + v2.y)

h3. Vector on Vector addition

<pre>
  v1 = [1, 3].vector
  v2 = [-2, 2].vector
  vec = v1 + v2
  vec.unit.should == :degrees
  vec.lat.should == -1
  vec.lng.should == 5

  # alternative addition operators
  vec = v1 << v2  
</pre>  

h3. Vector subtraction

<pre>
  v1 = [1, 3].vector
  v2 = [2, 1].vector
  vec = v1 - v2 # here v2 inversed (scaled by -1) and then added 
  vec.lat.should == -1
  vec.lng.should == 2
</pre>

h3. Vector scaling

<pre>
  v1 = [1, 3].vector
  vec = v1 * 2
  vec.lat.should == 2
  vec.lng.should == 6
</pre>

Using division operator / for inverse scaling

<pre>
  v1 = [4, 2].vector
  vec = v1 / 2
  vec.lat.should == 2
  vec.lng.should == 1
</pre>

h3. Adding GeoVectors

<pre>
  p1 = [1, -1]

  v1 = [1, 3].vector
  v2 = [32, 2.km].vector # 32 deg bearing, 2.km
  vec = v1 + v2
  vec.should be_a(GeoVectors)

  p2 = p1 + vec # Add GeoVectors to the point
</pre>

h3. Vector on Point addition

<pre>
  p1 = [1, 3].geo_point
  vec = [-2, 2].vector
  p2 = p1 + vec
  p2.lat.should == -1
  p2.lng.should == 5  
</pre>

Bearing Vector (using bearing and distance) 

<pre>
  p1 = [1, 3].geo_point
  vec = [32, 2.km].vector # 32 deg bearing, 2.km
  p2 = p1 + vec
  p2.lat.should == -1
  p2.lng.should == 5  
</pre>


h2. Contributing to geo_vectors
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

h2. Copyright

Copyright (c) 2011 Kristian Mandrup. See LICENSE.txt for
further details.

